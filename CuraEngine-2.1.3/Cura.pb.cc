// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Cura.proto

#include "Cura.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace cura {
namespace proto {
class ObjectListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectList>
      _instance;
} _ObjectList_default_instance_;
class SliceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Slice>
      _instance;
} _Slice_default_instance_;
class ObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Object>
      _instance;
} _Object_default_instance_;
class ProgressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Progress>
      _instance;
} _Progress_default_instance_;
class LayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Layer>
      _instance;
} _Layer_default_instance_;
class PolygonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Polygon>
      _instance;
} _Polygon_default_instance_;
class GCodeLayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GCodeLayer>
      _instance;
} _GCodeLayer_default_instance_;
class ObjectPrintTimeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectPrintTime>
      _instance;
} _ObjectPrintTime_default_instance_;
class SettingListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SettingList>
      _instance;
} _SettingList_default_instance_;
class SettingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Setting>
      _instance;
} _Setting_default_instance_;
class GCodePrefixDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GCodePrefix>
      _instance;
} _GCodePrefix_default_instance_;
class SlicingFinishedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SlicingFinished>
      _instance;
} _SlicingFinished_default_instance_;
}  // namespace proto
}  // namespace cura
namespace protobuf_Cura_2eproto {
void InitDefaultsObjectListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Cura_2eproto::InitDefaultsObject();
  protobuf_Cura_2eproto::InitDefaultsSetting();
  {
    void* ptr = &::cura::proto::_ObjectList_default_instance_;
    new (ptr) ::cura::proto::ObjectList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::ObjectList::InitAsDefaultInstance();
}

void InitDefaultsObjectList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectListImpl);
}

void InitDefaultsSliceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Cura_2eproto::InitDefaultsObjectList();
  {
    void* ptr = &::cura::proto::_Slice_default_instance_;
    new (ptr) ::cura::proto::Slice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::Slice::InitAsDefaultInstance();
}

void InitDefaultsSlice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSliceImpl);
}

void InitDefaultsObjectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Cura_2eproto::InitDefaultsSetting();
  {
    void* ptr = &::cura::proto::_Object_default_instance_;
    new (ptr) ::cura::proto::Object();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::Object::InitAsDefaultInstance();
}

void InitDefaultsObject() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectImpl);
}

void InitDefaultsProgressImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::cura::proto::_Progress_default_instance_;
    new (ptr) ::cura::proto::Progress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::Progress::InitAsDefaultInstance();
}

void InitDefaultsProgress() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProgressImpl);
}

void InitDefaultsLayerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Cura_2eproto::InitDefaultsPolygon();
  {
    void* ptr = &::cura::proto::_Layer_default_instance_;
    new (ptr) ::cura::proto::Layer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::Layer::InitAsDefaultInstance();
}

void InitDefaultsLayer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLayerImpl);
}

void InitDefaultsPolygonImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::cura::proto::_Polygon_default_instance_;
    new (ptr) ::cura::proto::Polygon();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::Polygon::InitAsDefaultInstance();
}

void InitDefaultsPolygon() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPolygonImpl);
}

void InitDefaultsGCodeLayerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::cura::proto::_GCodeLayer_default_instance_;
    new (ptr) ::cura::proto::GCodeLayer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::GCodeLayer::InitAsDefaultInstance();
}

void InitDefaultsGCodeLayer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGCodeLayerImpl);
}

void InitDefaultsObjectPrintTimeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::cura::proto::_ObjectPrintTime_default_instance_;
    new (ptr) ::cura::proto::ObjectPrintTime();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::ObjectPrintTime::InitAsDefaultInstance();
}

void InitDefaultsObjectPrintTime() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectPrintTimeImpl);
}

void InitDefaultsSettingListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Cura_2eproto::InitDefaultsSetting();
  {
    void* ptr = &::cura::proto::_SettingList_default_instance_;
    new (ptr) ::cura::proto::SettingList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::SettingList::InitAsDefaultInstance();
}

void InitDefaultsSettingList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSettingListImpl);
}

void InitDefaultsSettingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::cura::proto::_Setting_default_instance_;
    new (ptr) ::cura::proto::Setting();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::Setting::InitAsDefaultInstance();
}

void InitDefaultsSetting() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSettingImpl);
}

void InitDefaultsGCodePrefixImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::cura::proto::_GCodePrefix_default_instance_;
    new (ptr) ::cura::proto::GCodePrefix();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::GCodePrefix::InitAsDefaultInstance();
}

void InitDefaultsGCodePrefix() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGCodePrefixImpl);
}

void InitDefaultsSlicingFinishedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::cura::proto::_SlicingFinished_default_instance_;
    new (ptr) ::cura::proto::SlicingFinished();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::SlicingFinished::InitAsDefaultInstance();
}

void InitDefaultsSlicingFinished() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSlicingFinishedImpl);
}

::google::protobuf::Metadata file_level_metadata[12];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::ObjectList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::ObjectList, objects_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::ObjectList, settings_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Slice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Slice, object_lists_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Object, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Object, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Object, vertices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Object, normals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Object, indices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Object, settings_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Progress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Progress, amount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Layer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Layer, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Layer, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Layer, thickness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Layer, polygons_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Polygon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Polygon, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Polygon, points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Polygon, line_width_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::GCodeLayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::GCodeLayer, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::ObjectPrintTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::ObjectPrintTime, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::ObjectPrintTime, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::ObjectPrintTime, material_amount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::SettingList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::SettingList, settings_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Setting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Setting, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Setting, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::GCodePrefix, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::GCodePrefix, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::SlicingFinished, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::cura::proto::ObjectList)},
  { 7, -1, sizeof(::cura::proto::Slice)},
  { 13, -1, sizeof(::cura::proto::Object)},
  { 23, -1, sizeof(::cura::proto::Progress)},
  { 29, -1, sizeof(::cura::proto::Layer)},
  { 38, -1, sizeof(::cura::proto::Polygon)},
  { 46, -1, sizeof(::cura::proto::GCodeLayer)},
  { 52, -1, sizeof(::cura::proto::ObjectPrintTime)},
  { 60, -1, sizeof(::cura::proto::SettingList)},
  { 66, -1, sizeof(::cura::proto::Setting)},
  { 73, -1, sizeof(::cura::proto::GCodePrefix)},
  { 79, -1, sizeof(::cura::proto::SlicingFinished)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_ObjectList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_Slice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_Object_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_Progress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_Layer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_Polygon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_GCodeLayer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_ObjectPrintTime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_SettingList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_Setting_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_GCodePrefix_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_SlicingFinished_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Cura.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nCura.proto\022\ncura.proto\"X\n\nObjectList\022#"
      "\n\007objects\030\001 \003(\0132\022.cura.proto.Object\022%\n\010s"
      "ettings\030\002 \003(\0132\023.cura.proto.Setting\"5\n\005Sl"
      "ice\022,\n\014object_lists\030\001 \003(\0132\026.cura.proto.O"
      "bjectList\"o\n\006Object\022\n\n\002id\030\001 \001(\003\022\020\n\010verti"
      "ces\030\002 \001(\014\022\017\n\007normals\030\003 \001(\014\022\017\n\007indices\030\004 "
      "\001(\014\022%\n\010settings\030\005 \003(\0132\023.cura.proto.Setti"
      "ng\"\032\n\010Progress\022\016\n\006amount\030\001 \001(\002\"]\n\005Layer\022"
      "\n\n\002id\030\001 \001(\005\022\016\n\006height\030\002 \001(\002\022\021\n\tthickness"
      "\030\003 \001(\002\022%\n\010polygons\030\004 \003(\0132\023.cura.proto.Po"
      "lygon\"\216\002\n\007Polygon\022&\n\004type\030\001 \001(\0162\030.cura.p"
      "roto.Polygon.Type\022\016\n\006points\030\002 \001(\014\022\022\n\nlin"
      "e_width\030\003 \001(\002\"\266\001\n\004Type\022\014\n\010NoneType\020\000\022\016\n\n"
      "Inset0Type\020\001\022\016\n\nInsetXType\020\002\022\014\n\010SkinType"
      "\020\003\022\017\n\013SupportType\020\004\022\r\n\tSkirtType\020\005\022\016\n\nIn"
      "fillType\020\006\022\025\n\021SupportInfillType\020\007\022\023\n\017Mov"
      "eCombingType\020\010\022\026\n\022MoveRetractionType\020\t\"\032"
      "\n\nGCodeLayer\022\014\n\004data\030\002 \001(\014\"D\n\017ObjectPrin"
      "tTime\022\n\n\002id\030\001 \001(\003\022\014\n\004time\030\002 \001(\002\022\027\n\017mater"
      "ial_amount\030\003 \001(\002\"4\n\013SettingList\022%\n\010setti"
      "ngs\030\001 \003(\0132\023.cura.proto.Setting\"&\n\007Settin"
      "g\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 \001(\014\"\033\n\013GCodeP"
      "refix\022\014\n\004data\030\002 \001(\014\"\021\n\017SlicingFinishedb\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 926);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Cura.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Cura_2eproto
namespace cura {
namespace proto {
const ::google::protobuf::EnumDescriptor* Polygon_Type_descriptor() {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Cura_2eproto::file_level_enum_descriptors[0];
}
bool Polygon_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Polygon_Type Polygon::NoneType;
const Polygon_Type Polygon::Inset0Type;
const Polygon_Type Polygon::InsetXType;
const Polygon_Type Polygon::SkinType;
const Polygon_Type Polygon::SupportType;
const Polygon_Type Polygon::SkirtType;
const Polygon_Type Polygon::InfillType;
const Polygon_Type Polygon::SupportInfillType;
const Polygon_Type Polygon::MoveCombingType;
const Polygon_Type Polygon::MoveRetractionType;
const Polygon_Type Polygon::Type_MIN;
const Polygon_Type Polygon::Type_MAX;
const int Polygon::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ObjectList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectList::kObjectsFieldNumber;
const int ObjectList::kSettingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectList::ObjectList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cura_2eproto::InitDefaultsObjectList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.ObjectList)
}
ObjectList::ObjectList(const ObjectList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      objects_(from.objects_),
      settings_(from.settings_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cura.proto.ObjectList)
}

void ObjectList::SharedCtor() {
  _cached_size_ = 0;
}

ObjectList::~ObjectList() {
  // @@protoc_insertion_point(destructor:cura.proto.ObjectList)
  SharedDtor();
}

void ObjectList::SharedDtor() {
}

void ObjectList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectList::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectList& ObjectList::default_instance() {
  ::protobuf_Cura_2eproto::InitDefaultsObjectList();
  return *internal_default_instance();
}

ObjectList* ObjectList::New(::google::protobuf::Arena* arena) const {
  ObjectList* n = new ObjectList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectList::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.ObjectList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objects_.Clear();
  settings_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.ObjectList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .cura.proto.Object objects = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_objects()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .cura.proto.Setting settings = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.ObjectList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.ObjectList)
  return false;
#undef DO_
}

void ObjectList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.ObjectList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cura.proto.Object objects = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objects_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->objects(static_cast<int>(i)), output);
  }

  // repeated .cura.proto.Setting settings = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->settings_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->settings(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.ObjectList)
}

::google::protobuf::uint8* ObjectList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.ObjectList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cura.proto.Object objects = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objects_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->objects(static_cast<int>(i)), deterministic, target);
  }

  // repeated .cura.proto.Setting settings = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->settings_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->settings(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.ObjectList)
  return target;
}

size_t ObjectList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.ObjectList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .cura.proto.Object objects = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->objects_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->objects(static_cast<int>(i)));
    }
  }

  // repeated .cura.proto.Setting settings = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->settings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->settings(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.ObjectList)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.ObjectList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.ObjectList)
    MergeFrom(*source);
  }
}

void ObjectList::MergeFrom(const ObjectList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.ObjectList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  objects_.MergeFrom(from.objects_);
  settings_.MergeFrom(from.settings_);
}

void ObjectList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.ObjectList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectList::CopyFrom(const ObjectList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.ObjectList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectList::IsInitialized() const {
  return true;
}

void ObjectList::Swap(ObjectList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectList::InternalSwap(ObjectList* other) {
  using std::swap;
  objects_.InternalSwap(&other->objects_);
  settings_.InternalSwap(&other->settings_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectList::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Slice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Slice::kObjectListsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Slice::Slice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cura_2eproto::InitDefaultsSlice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.Slice)
}
Slice::Slice(const Slice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      object_lists_(from.object_lists_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cura.proto.Slice)
}

void Slice::SharedCtor() {
  _cached_size_ = 0;
}

Slice::~Slice() {
  // @@protoc_insertion_point(destructor:cura.proto.Slice)
  SharedDtor();
}

void Slice::SharedDtor() {
}

void Slice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Slice::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Slice& Slice::default_instance() {
  ::protobuf_Cura_2eproto::InitDefaultsSlice();
  return *internal_default_instance();
}

Slice* Slice::New(::google::protobuf::Arena* arena) const {
  Slice* n = new Slice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Slice::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.Slice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_lists_.Clear();
  _internal_metadata_.Clear();
}

bool Slice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.Slice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .cura.proto.ObjectList object_lists = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_object_lists()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.Slice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.Slice)
  return false;
#undef DO_
}

void Slice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.Slice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cura.proto.ObjectList object_lists = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->object_lists_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->object_lists(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.Slice)
}

::google::protobuf::uint8* Slice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.Slice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cura.proto.ObjectList object_lists = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->object_lists_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->object_lists(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.Slice)
  return target;
}

size_t Slice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.Slice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .cura.proto.ObjectList object_lists = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->object_lists_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->object_lists(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Slice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.Slice)
  GOOGLE_DCHECK_NE(&from, this);
  const Slice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Slice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.Slice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.Slice)
    MergeFrom(*source);
  }
}

void Slice::MergeFrom(const Slice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.Slice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  object_lists_.MergeFrom(from.object_lists_);
}

void Slice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.Slice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Slice::CopyFrom(const Slice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.Slice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Slice::IsInitialized() const {
  return true;
}

void Slice::Swap(Slice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Slice::InternalSwap(Slice* other) {
  using std::swap;
  object_lists_.InternalSwap(&other->object_lists_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Slice::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Object::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Object::kIdFieldNumber;
const int Object::kVerticesFieldNumber;
const int Object::kNormalsFieldNumber;
const int Object::kIndicesFieldNumber;
const int Object::kSettingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Object::Object()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cura_2eproto::InitDefaultsObject();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.Object)
}
Object::Object(const Object& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      settings_(from.settings_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vertices_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vertices().size() > 0) {
    vertices_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vertices_);
  }
  normals_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.normals().size() > 0) {
    normals_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.normals_);
  }
  indices_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.indices().size() > 0) {
    indices_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.indices_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:cura.proto.Object)
}

void Object::SharedCtor() {
  vertices_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  normals_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  indices_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

Object::~Object() {
  // @@protoc_insertion_point(destructor:cura.proto.Object)
  SharedDtor();
}

void Object::SharedDtor() {
  vertices_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  normals_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  indices_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Object::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Object::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Object& Object::default_instance() {
  ::protobuf_Cura_2eproto::InitDefaultsObject();
  return *internal_default_instance();
}

Object* Object::New(::google::protobuf::Arena* arena) const {
  Object* n = new Object;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Object::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.Object)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  settings_.Clear();
  vertices_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  normals_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  indices_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Object::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.Object)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes vertices = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_vertices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes normals = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_normals()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes indices = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_indices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .cura.proto.Setting settings = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.Object)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.Object)
  return false;
#undef DO_
}

void Object::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.Object)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // bytes vertices = 2;
  if (this->vertices().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->vertices(), output);
  }

  // bytes normals = 3;
  if (this->normals().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->normals(), output);
  }

  // bytes indices = 4;
  if (this->indices().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->indices(), output);
  }

  // repeated .cura.proto.Setting settings = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->settings_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->settings(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.Object)
}

::google::protobuf::uint8* Object::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.Object)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // bytes vertices = 2;
  if (this->vertices().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->vertices(), target);
  }

  // bytes normals = 3;
  if (this->normals().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->normals(), target);
  }

  // bytes indices = 4;
  if (this->indices().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->indices(), target);
  }

  // repeated .cura.proto.Setting settings = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->settings_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->settings(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.Object)
  return target;
}

size_t Object::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.Object)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .cura.proto.Setting settings = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->settings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->settings(static_cast<int>(i)));
    }
  }

  // bytes vertices = 2;
  if (this->vertices().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->vertices());
  }

  // bytes normals = 3;
  if (this->normals().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->normals());
  }

  // bytes indices = 4;
  if (this->indices().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->indices());
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Object::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.Object)
  GOOGLE_DCHECK_NE(&from, this);
  const Object* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Object>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.Object)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.Object)
    MergeFrom(*source);
  }
}

void Object::MergeFrom(const Object& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.Object)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  settings_.MergeFrom(from.settings_);
  if (from.vertices().size() > 0) {

    vertices_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vertices_);
  }
  if (from.normals().size() > 0) {

    normals_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.normals_);
  }
  if (from.indices().size() > 0) {

    indices_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.indices_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Object::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Object::CopyFrom(const Object& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Object::IsInitialized() const {
  return true;
}

void Object::Swap(Object* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Object::InternalSwap(Object* other) {
  using std::swap;
  settings_.InternalSwap(&other->settings_);
  vertices_.Swap(&other->vertices_);
  normals_.Swap(&other->normals_);
  indices_.Swap(&other->indices_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Object::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Progress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Progress::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Progress::Progress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cura_2eproto::InitDefaultsProgress();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.Progress)
}
Progress::Progress(const Progress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:cura.proto.Progress)
}

void Progress::SharedCtor() {
  amount_ = 0;
  _cached_size_ = 0;
}

Progress::~Progress() {
  // @@protoc_insertion_point(destructor:cura.proto.Progress)
  SharedDtor();
}

void Progress::SharedDtor() {
}

void Progress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Progress::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Progress& Progress::default_instance() {
  ::protobuf_Cura_2eproto::InitDefaultsProgress();
  return *internal_default_instance();
}

Progress* Progress::New(::google::protobuf::Arena* arena) const {
  Progress* n = new Progress;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Progress::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.Progress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  amount_ = 0;
  _internal_metadata_.Clear();
}

bool Progress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.Progress)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float amount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.Progress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.Progress)
  return false;
#undef DO_
}

void Progress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.Progress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float amount = 1;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->amount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.Progress)
}

::google::protobuf::uint8* Progress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.Progress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float amount = 1;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->amount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.Progress)
  return target;
}

size_t Progress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.Progress)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float amount = 1;
  if (this->amount() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Progress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.Progress)
  GOOGLE_DCHECK_NE(&from, this);
  const Progress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Progress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.Progress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.Progress)
    MergeFrom(*source);
  }
}

void Progress::MergeFrom(const Progress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.Progress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.amount() != 0) {
    set_amount(from.amount());
  }
}

void Progress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.Progress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Progress::CopyFrom(const Progress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.Progress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Progress::IsInitialized() const {
  return true;
}

void Progress::Swap(Progress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Progress::InternalSwap(Progress* other) {
  using std::swap;
  swap(amount_, other->amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Progress::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Layer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Layer::kIdFieldNumber;
const int Layer::kHeightFieldNumber;
const int Layer::kThicknessFieldNumber;
const int Layer::kPolygonsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Layer::Layer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cura_2eproto::InitDefaultsLayer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.Layer)
}
Layer::Layer(const Layer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      polygons_(from.polygons_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&thickness_) -
    reinterpret_cast<char*>(&id_)) + sizeof(thickness_));
  // @@protoc_insertion_point(copy_constructor:cura.proto.Layer)
}

void Layer::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&thickness_) -
      reinterpret_cast<char*>(&id_)) + sizeof(thickness_));
  _cached_size_ = 0;
}

Layer::~Layer() {
  // @@protoc_insertion_point(destructor:cura.proto.Layer)
  SharedDtor();
}

void Layer::SharedDtor() {
}

void Layer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Layer::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Layer& Layer::default_instance() {
  ::protobuf_Cura_2eproto::InitDefaultsLayer();
  return *internal_default_instance();
}

Layer* Layer::New(::google::protobuf::Arena* arena) const {
  Layer* n = new Layer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Layer::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.Layer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  polygons_.Clear();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&thickness_) -
      reinterpret_cast<char*>(&id_)) + sizeof(thickness_));
  _internal_metadata_.Clear();
}

bool Layer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.Layer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float thickness = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &thickness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .cura.proto.Polygon polygons = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_polygons()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.Layer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.Layer)
  return false;
#undef DO_
}

void Layer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.Layer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // float height = 2;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->height(), output);
  }

  // float thickness = 3;
  if (this->thickness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->thickness(), output);
  }

  // repeated .cura.proto.Polygon polygons = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polygons_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->polygons(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.Layer)
}

::google::protobuf::uint8* Layer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.Layer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // float height = 2;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->height(), target);
  }

  // float thickness = 3;
  if (this->thickness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->thickness(), target);
  }

  // repeated .cura.proto.Polygon polygons = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polygons_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->polygons(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.Layer)
  return target;
}

size_t Layer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.Layer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .cura.proto.Polygon polygons = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->polygons_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->polygons(static_cast<int>(i)));
    }
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // float height = 2;
  if (this->height() != 0) {
    total_size += 1 + 4;
  }

  // float thickness = 3;
  if (this->thickness() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Layer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.Layer)
  GOOGLE_DCHECK_NE(&from, this);
  const Layer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Layer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.Layer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.Layer)
    MergeFrom(*source);
  }
}

void Layer::MergeFrom(const Layer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.Layer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  polygons_.MergeFrom(from.polygons_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.thickness() != 0) {
    set_thickness(from.thickness());
  }
}

void Layer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.Layer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Layer::CopyFrom(const Layer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.Layer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Layer::IsInitialized() const {
  return true;
}

void Layer::Swap(Layer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Layer::InternalSwap(Layer* other) {
  using std::swap;
  polygons_.InternalSwap(&other->polygons_);
  swap(id_, other->id_);
  swap(height_, other->height_);
  swap(thickness_, other->thickness_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Layer::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Polygon::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Polygon::kTypeFieldNumber;
const int Polygon::kPointsFieldNumber;
const int Polygon::kLineWidthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Polygon::Polygon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cura_2eproto::InitDefaultsPolygon();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.Polygon)
}
Polygon::Polygon(const Polygon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  points_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.points().size() > 0) {
    points_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.points_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&line_width_) -
    reinterpret_cast<char*>(&type_)) + sizeof(line_width_));
  // @@protoc_insertion_point(copy_constructor:cura.proto.Polygon)
}

void Polygon::SharedCtor() {
  points_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&line_width_) -
      reinterpret_cast<char*>(&type_)) + sizeof(line_width_));
  _cached_size_ = 0;
}

Polygon::~Polygon() {
  // @@protoc_insertion_point(destructor:cura.proto.Polygon)
  SharedDtor();
}

void Polygon::SharedDtor() {
  points_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Polygon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Polygon::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Polygon& Polygon::default_instance() {
  ::protobuf_Cura_2eproto::InitDefaultsPolygon();
  return *internal_default_instance();
}

Polygon* Polygon::New(::google::protobuf::Arena* arena) const {
  Polygon* n = new Polygon;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Polygon::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.Polygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&line_width_) -
      reinterpret_cast<char*>(&type_)) + sizeof(line_width_));
  _internal_metadata_.Clear();
}

bool Polygon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.Polygon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .cura.proto.Polygon.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::cura::proto::Polygon_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes points = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float line_width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &line_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.Polygon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.Polygon)
  return false;
#undef DO_
}

void Polygon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.Polygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .cura.proto.Polygon.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // bytes points = 2;
  if (this->points().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->points(), output);
  }

  // float line_width = 3;
  if (this->line_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->line_width(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.Polygon)
}

::google::protobuf::uint8* Polygon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.Polygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .cura.proto.Polygon.Type type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // bytes points = 2;
  if (this->points().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->points(), target);
  }

  // float line_width = 3;
  if (this->line_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->line_width(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.Polygon)
  return target;
}

size_t Polygon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.Polygon)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes points = 2;
  if (this->points().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->points());
  }

  // .cura.proto.Polygon.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // float line_width = 3;
  if (this->line_width() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Polygon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.Polygon)
  GOOGLE_DCHECK_NE(&from, this);
  const Polygon* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Polygon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.Polygon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.Polygon)
    MergeFrom(*source);
  }
}

void Polygon::MergeFrom(const Polygon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.Polygon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.points().size() > 0) {

    points_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.points_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.line_width() != 0) {
    set_line_width(from.line_width());
  }
}

void Polygon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.Polygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Polygon::CopyFrom(const Polygon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.Polygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Polygon::IsInitialized() const {
  return true;
}

void Polygon::Swap(Polygon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Polygon::InternalSwap(Polygon* other) {
  using std::swap;
  points_.Swap(&other->points_);
  swap(type_, other->type_);
  swap(line_width_, other->line_width_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Polygon::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GCodeLayer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GCodeLayer::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GCodeLayer::GCodeLayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cura_2eproto::InitDefaultsGCodeLayer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.GCodeLayer)
}
GCodeLayer::GCodeLayer(const GCodeLayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:cura.proto.GCodeLayer)
}

void GCodeLayer::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GCodeLayer::~GCodeLayer() {
  // @@protoc_insertion_point(destructor:cura.proto.GCodeLayer)
  SharedDtor();
}

void GCodeLayer::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GCodeLayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GCodeLayer::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GCodeLayer& GCodeLayer::default_instance() {
  ::protobuf_Cura_2eproto::InitDefaultsGCodeLayer();
  return *internal_default_instance();
}

GCodeLayer* GCodeLayer::New(::google::protobuf::Arena* arena) const {
  GCodeLayer* n = new GCodeLayer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GCodeLayer::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.GCodeLayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GCodeLayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.GCodeLayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.GCodeLayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.GCodeLayer)
  return false;
#undef DO_
}

void GCodeLayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.GCodeLayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.GCodeLayer)
}

::google::protobuf::uint8* GCodeLayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.GCodeLayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.GCodeLayer)
  return target;
}

size_t GCodeLayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.GCodeLayer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GCodeLayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.GCodeLayer)
  GOOGLE_DCHECK_NE(&from, this);
  const GCodeLayer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GCodeLayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.GCodeLayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.GCodeLayer)
    MergeFrom(*source);
  }
}

void GCodeLayer::MergeFrom(const GCodeLayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.GCodeLayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void GCodeLayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.GCodeLayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCodeLayer::CopyFrom(const GCodeLayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.GCodeLayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCodeLayer::IsInitialized() const {
  return true;
}

void GCodeLayer::Swap(GCodeLayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GCodeLayer::InternalSwap(GCodeLayer* other) {
  using std::swap;
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GCodeLayer::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectPrintTime::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectPrintTime::kIdFieldNumber;
const int ObjectPrintTime::kTimeFieldNumber;
const int ObjectPrintTime::kMaterialAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectPrintTime::ObjectPrintTime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cura_2eproto::InitDefaultsObjectPrintTime();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.ObjectPrintTime)
}
ObjectPrintTime::ObjectPrintTime(const ObjectPrintTime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&material_amount_) -
    reinterpret_cast<char*>(&id_)) + sizeof(material_amount_));
  // @@protoc_insertion_point(copy_constructor:cura.proto.ObjectPrintTime)
}

void ObjectPrintTime::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&material_amount_) -
      reinterpret_cast<char*>(&id_)) + sizeof(material_amount_));
  _cached_size_ = 0;
}

ObjectPrintTime::~ObjectPrintTime() {
  // @@protoc_insertion_point(destructor:cura.proto.ObjectPrintTime)
  SharedDtor();
}

void ObjectPrintTime::SharedDtor() {
}

void ObjectPrintTime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectPrintTime::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectPrintTime& ObjectPrintTime::default_instance() {
  ::protobuf_Cura_2eproto::InitDefaultsObjectPrintTime();
  return *internal_default_instance();
}

ObjectPrintTime* ObjectPrintTime::New(::google::protobuf::Arena* arena) const {
  ObjectPrintTime* n = new ObjectPrintTime;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectPrintTime::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.ObjectPrintTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&material_amount_) -
      reinterpret_cast<char*>(&id_)) + sizeof(material_amount_));
  _internal_metadata_.Clear();
}

bool ObjectPrintTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.ObjectPrintTime)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float material_amount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &material_amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.ObjectPrintTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.ObjectPrintTime)
  return false;
#undef DO_
}

void ObjectPrintTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.ObjectPrintTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // float time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->time(), output);
  }

  // float material_amount = 3;
  if (this->material_amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->material_amount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.ObjectPrintTime)
}

::google::protobuf::uint8* ObjectPrintTime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.ObjectPrintTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // float time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->time(), target);
  }

  // float material_amount = 3;
  if (this->material_amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->material_amount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.ObjectPrintTime)
  return target;
}

size_t ObjectPrintTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.ObjectPrintTime)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // float time = 2;
  if (this->time() != 0) {
    total_size += 1 + 4;
  }

  // float material_amount = 3;
  if (this->material_amount() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectPrintTime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.ObjectPrintTime)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectPrintTime* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectPrintTime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.ObjectPrintTime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.ObjectPrintTime)
    MergeFrom(*source);
  }
}

void ObjectPrintTime::MergeFrom(const ObjectPrintTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.ObjectPrintTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.material_amount() != 0) {
    set_material_amount(from.material_amount());
  }
}

void ObjectPrintTime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.ObjectPrintTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectPrintTime::CopyFrom(const ObjectPrintTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.ObjectPrintTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectPrintTime::IsInitialized() const {
  return true;
}

void ObjectPrintTime::Swap(ObjectPrintTime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectPrintTime::InternalSwap(ObjectPrintTime* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(time_, other->time_);
  swap(material_amount_, other->material_amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectPrintTime::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SettingList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SettingList::kSettingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SettingList::SettingList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cura_2eproto::InitDefaultsSettingList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.SettingList)
}
SettingList::SettingList(const SettingList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      settings_(from.settings_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cura.proto.SettingList)
}

void SettingList::SharedCtor() {
  _cached_size_ = 0;
}

SettingList::~SettingList() {
  // @@protoc_insertion_point(destructor:cura.proto.SettingList)
  SharedDtor();
}

void SettingList::SharedDtor() {
}

void SettingList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SettingList::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SettingList& SettingList::default_instance() {
  ::protobuf_Cura_2eproto::InitDefaultsSettingList();
  return *internal_default_instance();
}

SettingList* SettingList::New(::google::protobuf::Arena* arena) const {
  SettingList* n = new SettingList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SettingList::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.SettingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  settings_.Clear();
  _internal_metadata_.Clear();
}

bool SettingList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.SettingList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .cura.proto.Setting settings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.SettingList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.SettingList)
  return false;
#undef DO_
}

void SettingList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.SettingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cura.proto.Setting settings = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->settings_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->settings(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.SettingList)
}

::google::protobuf::uint8* SettingList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.SettingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cura.proto.Setting settings = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->settings_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->settings(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.SettingList)
  return target;
}

size_t SettingList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.SettingList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .cura.proto.Setting settings = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->settings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->settings(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SettingList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.SettingList)
  GOOGLE_DCHECK_NE(&from, this);
  const SettingList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SettingList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.SettingList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.SettingList)
    MergeFrom(*source);
  }
}

void SettingList::MergeFrom(const SettingList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.SettingList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  settings_.MergeFrom(from.settings_);
}

void SettingList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.SettingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SettingList::CopyFrom(const SettingList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.SettingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SettingList::IsInitialized() const {
  return true;
}

void SettingList::Swap(SettingList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SettingList::InternalSwap(SettingList* other) {
  using std::swap;
  settings_.InternalSwap(&other->settings_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SettingList::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Setting::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Setting::kNameFieldNumber;
const int Setting::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Setting::Setting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cura_2eproto::InitDefaultsSetting();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.Setting)
}
Setting::Setting(const Setting& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:cura.proto.Setting)
}

void Setting::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Setting::~Setting() {
  // @@protoc_insertion_point(destructor:cura.proto.Setting)
  SharedDtor();
}

void Setting::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Setting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Setting::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Setting& Setting::default_instance() {
  ::protobuf_Cura_2eproto::InitDefaultsSetting();
  return *internal_default_instance();
}

Setting* Setting::New(::google::protobuf::Arena* arena) const {
  Setting* n = new Setting;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Setting::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.Setting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Setting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.Setting)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cura.proto.Setting.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.Setting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.Setting)
  return false;
#undef DO_
}

void Setting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.Setting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cura.proto.Setting.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.Setting)
}

::google::protobuf::uint8* Setting::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.Setting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cura.proto.Setting.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.Setting)
  return target;
}

size_t Setting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.Setting)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Setting::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.Setting)
  GOOGLE_DCHECK_NE(&from, this);
  const Setting* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Setting>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.Setting)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.Setting)
    MergeFrom(*source);
  }
}

void Setting::MergeFrom(const Setting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.Setting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Setting::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.Setting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Setting::CopyFrom(const Setting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.Setting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Setting::IsInitialized() const {
  return true;
}

void Setting::Swap(Setting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Setting::InternalSwap(Setting* other) {
  using std::swap;
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Setting::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GCodePrefix::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GCodePrefix::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GCodePrefix::GCodePrefix()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cura_2eproto::InitDefaultsGCodePrefix();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.GCodePrefix)
}
GCodePrefix::GCodePrefix(const GCodePrefix& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:cura.proto.GCodePrefix)
}

void GCodePrefix::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GCodePrefix::~GCodePrefix() {
  // @@protoc_insertion_point(destructor:cura.proto.GCodePrefix)
  SharedDtor();
}

void GCodePrefix::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GCodePrefix::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GCodePrefix::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GCodePrefix& GCodePrefix::default_instance() {
  ::protobuf_Cura_2eproto::InitDefaultsGCodePrefix();
  return *internal_default_instance();
}

GCodePrefix* GCodePrefix::New(::google::protobuf::Arena* arena) const {
  GCodePrefix* n = new GCodePrefix;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GCodePrefix::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.GCodePrefix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GCodePrefix::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.GCodePrefix)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.GCodePrefix)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.GCodePrefix)
  return false;
#undef DO_
}

void GCodePrefix::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.GCodePrefix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.GCodePrefix)
}

::google::protobuf::uint8* GCodePrefix::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.GCodePrefix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.GCodePrefix)
  return target;
}

size_t GCodePrefix::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.GCodePrefix)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GCodePrefix::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.GCodePrefix)
  GOOGLE_DCHECK_NE(&from, this);
  const GCodePrefix* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GCodePrefix>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.GCodePrefix)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.GCodePrefix)
    MergeFrom(*source);
  }
}

void GCodePrefix::MergeFrom(const GCodePrefix& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.GCodePrefix)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void GCodePrefix::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.GCodePrefix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCodePrefix::CopyFrom(const GCodePrefix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.GCodePrefix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCodePrefix::IsInitialized() const {
  return true;
}

void GCodePrefix::Swap(GCodePrefix* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GCodePrefix::InternalSwap(GCodePrefix* other) {
  using std::swap;
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GCodePrefix::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SlicingFinished::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SlicingFinished::SlicingFinished()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cura_2eproto::InitDefaultsSlicingFinished();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.SlicingFinished)
}
SlicingFinished::SlicingFinished(const SlicingFinished& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cura.proto.SlicingFinished)
}

void SlicingFinished::SharedCtor() {
  _cached_size_ = 0;
}

SlicingFinished::~SlicingFinished() {
  // @@protoc_insertion_point(destructor:cura.proto.SlicingFinished)
  SharedDtor();
}

void SlicingFinished::SharedDtor() {
}

void SlicingFinished::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SlicingFinished::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SlicingFinished& SlicingFinished::default_instance() {
  ::protobuf_Cura_2eproto::InitDefaultsSlicingFinished();
  return *internal_default_instance();
}

SlicingFinished* SlicingFinished::New(::google::protobuf::Arena* arena) const {
  SlicingFinished* n = new SlicingFinished;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SlicingFinished::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.SlicingFinished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SlicingFinished::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.SlicingFinished)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.SlicingFinished)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.SlicingFinished)
  return false;
#undef DO_
}

void SlicingFinished::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.SlicingFinished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.SlicingFinished)
}

::google::protobuf::uint8* SlicingFinished::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.SlicingFinished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.SlicingFinished)
  return target;
}

size_t SlicingFinished::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.SlicingFinished)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SlicingFinished::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.SlicingFinished)
  GOOGLE_DCHECK_NE(&from, this);
  const SlicingFinished* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SlicingFinished>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.SlicingFinished)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.SlicingFinished)
    MergeFrom(*source);
  }
}

void SlicingFinished::MergeFrom(const SlicingFinished& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.SlicingFinished)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SlicingFinished::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.SlicingFinished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SlicingFinished::CopyFrom(const SlicingFinished& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.SlicingFinished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SlicingFinished::IsInitialized() const {
  return true;
}

void SlicingFinished::Swap(SlicingFinished* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SlicingFinished::InternalSwap(SlicingFinished* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SlicingFinished::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace cura

// @@protoc_insertion_point(global_scope)
